# These substitutions allow the end user to override certain values
substitutions:
  name: "tagtuner-for-tagreader"
  friendly_name: "TagTuner"
  d1_mini: d1_mini
  buzpin: D7
  ledpin: D8

esphome:
  name: "${name}"
  friendly_name: ${friendly_name}
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

  # hello world
  on_boot:
    priority: -100
    then:
    - wait_until:
        condition:
          api.connected:
        timeout: 20s
    - text_sensor.template.publish:
        id: status
        state: "Ready"
    # - light.turn_off: led1

esp8266:
  board: $d1_mini
  framework:
    version: recommended

# To be able to get logs from the device via serial and api.
logger:
  # level: VERBOSE
  # level: DEBUG
  # level: WARN
  # level: ERROR
  level: NONE
  # logs:
  #   light: WARN
  #   pn532: DEBUG
  #   pn532_i2c: DEBUG

packages:
  project: github://luka6000/TagTuner/tagtuner-project.yaml@main
  core-nfc: github://luka6000/TagTuner/tagtuner-core-nfc.yaml@main
  core-comms: github://luka6000/TagTuner/tagtuner-core-comms.yaml@main
  # I was not able to use light with tagreader hardware and TagTuner firmware.
  # My nodemcu is restarting every time I try to turn on the light.
  # Please experiment on your own.
  # tagreader-light: !include tagtuner-for-tagreader-light.yaml

i2c:
  id: bus_i2c
  scan: False
  frequency: 100kHz
  timeout: 13ms #to prevent pn532 timeout

output:
  - platform: esp8266_pwm
    pin: $buzpin
    id: buzzer

rtttl:
  output: buzzer
  id: buz

switch:
  - platform: template
    name: "Buzzer Enabled"
    id: buzzon
    icon: mdi:volume-high
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config

#Enable light and check if it works for you. My nodemcu keeps restarting with light enabled.
script:
  - id: led_blink
    then:
    - if:
        condition:
          switch.is_on: buzzon
        then:
        - rtttl.play: "write:d=24,o=5,b=100:g,b"
    # - if:
    #     condition:
    #       switch.is_on: ledon
    #     then:
    #     - light.turn_on:
    #         id: led1
    #         effect: blinkWhite
    #     - delay: 600ms
    #     - light.turn_off: led1
  - id: led_ok
    then:
    - if:
        condition:
          switch.is_on: buzzon
        then:
        - rtttl.play: "success:d=24,o=5,b=100:c,g,b"
    # - if:
    #     condition:
    #       switch.is_on: ledon
    #     then:
    #     - light.turn_on:
    #         id: led1
    #         effect: blinkGreen
    #     - delay: 600ms
    #     - light.turn_off: led1
  - id: led_success
    then:
    - if:
        condition:
          switch.is_on: buzzon
        then:
        - rtttl.play: "write:d=24,o=5,b=100:b,b"
    # - if:
    #     condition:
    #       switch.is_on: ledon
    #     then:
    #     - light.turn_on:
    #         id: led1
    #         effect: blinkGreen
    #     - delay: 600ms
    #     - light.turn_off: led1
  - id: led_tagwrite
    then:
    - if:
        condition:
          switch.is_on: buzzon
        then:
        - rtttl.play: "write:d=24,o=5,b=100:b"
    # - if:
    #     condition:
    #       switch.is_on: ledon
    #     then:
    #     - light.turn_on:
    #         id: led1
    #         effect: blinkRed
